<parser name = "opts" title = "parse some commandline parameters">
This is an example of commandline options parser

<include filename = "license.xml" />

<parameter name="c" lname="clone" type="bool">
A flag type long option example
</parameter>

<parameter name="long_bool" type="bool">
A flag type long only option example
</parameter>

<parameter name="f" type="bool">
A flag type option example
</parameter>

<parameter name="m" type="string">
A short option example
</parameter>

<parameter name="a" lname="append" type="string">
A short and long option example
</parameter>

<parameter name="long_str" type="string">
A string type long only option example
</parameter>

<parameter name="h" lname="help" type="string">
A short and long option example
</parameter>

<parameter name="d" lname="default" type="string">
<default>default value</default>
A short and long option example with default value
</parameter>

<parameter name="long_str_dflt" type="string">
<default>default long value</default>
A string type long only option example
</parameter>

<parameter name="r" lname="regex" type="string">
<regex>^read:(hold|write):([0-9]+)(-([0-9]+))*$</regex>
A short and long regex option example
</parameter>

<parameter name="s" lname="regext" type="string">
<regex>^read:(hold|write):([0-9]+)(-([0-9]+))*$</regex>
<default>read:hold:2-3</default>
A short and long regex option example with default value 
</parameter>

<parameter name="e" lname="enum" type="enum">
<value>value 1</value>
<value>value 2</value>
<value>value 3</value>
A short and long option enum parameter example
</parameter>

<parameter name="g" lname="enumt" type="enum">
<value>value 3</value>
<value>value 4</value>
<value>value 5</value>
<default>value 3</default>
A short and long option enum parameter example
</parameter>

<parameter name="enum_long" type="enum">
<value>value 6</value>
<value>value 7</value>
<value>value 8</value>
<default>value 6</default>
A long only option enum parameter example
</parameter>

<parameter name="regex_long" type="string">
<regex>^read:(hold|write):([0-9]+)(-([0-9]+))*$</regex>
<default>read:hold:2-10</default>
A long only regex option example with default value 
</parameter>

</parser>
